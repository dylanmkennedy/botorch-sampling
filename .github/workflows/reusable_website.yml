name: Reusable Publish Website Workflow

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      publish_versioned_website:
        required: true
        type: boolean
        default: false

jobs:
  publish-website:
    name: Publish website
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - if: ${{ inputs.publish_versioned_website }}    
      name: Install dependencies for versioned website
      # there may not be a compatible Ax pip version, so we use the development version
      env:
        ALLOW_BOTORCH_LATEST: true  # allow Ax to install w/ new BoTorch release
      run: |
        pip install .[dev]
        pip install git+https://github.com/facebook/Ax.git
        pip install .[tutorials]
        pip install beautifulsoup4 ipython nbconvert jinja2
    - if: ${{ !inputs.publish_versioned_website }}    
      name: Install dependencies for latest website
      env:
        ALLOW_LATEST_GPYTORCH_LINOP: true
        ALLOW_BOTORCH_LATEST: true  # allow Ax to install w/ new BoTorch release
      run: |
        pip install git+https://github.com/cornellius-gp/linear_operator.git
        pip install git+https://github.com/cornellius-gp/gpytorch.git
        pip install .[dev]
        pip install git+https://github.com/facebook/Ax.git
        pip install beautifulsoup4 ipython nbconvert jinja2
    - if: ${{ inputs.publish_versioned_website }}
      name: Publish versioned website
      env:
        DOCUSAURUS_PUBLISH_TOKEN: ${{ secrets.DOCUSAURUS_PUBLISH_TOKEN }}
      run: |
        ./scripts/publish_site.sh -d -v ${{ github.event.release.tag_name }}
    - if: ${{ !inputs.publish_versioned_website }}
      name: Publish latest website
      env:
        DOCUSAURUS_PUBLISH_TOKEN: ${{ secrets.DOCUSAURUS_PUBLISH_TOKEN }}
      run: |
        ./scripts/publish_site.sh -d
